#!/usr/bin/env bash

RED="\[\033[31m\]"
GREEN="\[\033[32m\]"
YELLOW="\[\033[33m\]"
BLUE="\[\033[34m\]"
PURPLE="\[\033[35m\]"
RESET="\[\033[0m\]"
MAGENTA="\[\033[95m\]"
LBLUE="\[\033[94m\]"

PS1="${GREEN}\w${RESET}"

GIT_PS1_SHOWDIRTYSTATE="true"
GIT_PS1_STATESEPARATOR="|"
GIT_PS1_SHOWSTASHSTATE="true"
GIT_PS1_SHOWUNTRACKEDFILES="true"

__kube_context_display ()
{
  if [[ "${DOTFILES_PROMPT_KUBE:-}" == "true" ]]; then
    printf " [$(kubectl config view --minify --output 'jsonpath={..current-context}/{..namespace}')]"
  fi
}

__update_virtual_env ()
{
  # Current virtualenv
  if [[ $VIRTUAL_ENV != "" ]]; then
      # Strip out the path and just leave the env name
      printf "{${VIRTUAL_ENV##*/}}"
  fi
}

if command -v python3 > /dev/null 2>&1 && [[ $(type -t __update_virtual_env) = "function" ]]; then
  PS1="${BLUE}\$(__update_virtual_env)${RESET} ${PS1}"
fi

if command -v git > /dev/null 2>&1 && [[ $(type -t __git_ps1) = "function" ]]; then
  PS1="${PS1}${YELLOW}\$(__git_ps1)${RESET}"
fi

if command -v kubectl > /dev/null 2>&1; then
  PS1="${PS1}${LBLUE}\$(__kube_context_display)${RESET}"
fi

PROMPT_DIRTRIM=3

export PS1="${PS1} $ "
